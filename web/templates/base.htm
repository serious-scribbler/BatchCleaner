<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    
    <link rel="stylesheet" href="/purecss/base.css">
	<link rel="stylesheet" href="/purecss/pure.css">
	<link rel="stylesheet" href="/purecss/grids-responsive.css">
    <link rel="stylesheet" href="/style.css">
    <title>{% block title %}{% endblock %} - BatchCleaner</title>
    <script type="text/javascript" src="/eel.js"></script>

    <script id="path-template" type="text/html">
        <td id="path-{ID}">{PATH}</td>
        <td id="size-{ID}">{SIZE}</td>
        <td class="centered"><input id="recursive-{ID}" type="checkbox" checked onclick="toggleRecursive('{ID}')"/></td>
        <td>
            <div class="pure-g">
                <div class="pure-u-1-2 centered"><button class="pure-button button-edit" onclick="editPath('{ID}')">Edit</button></div>
                <div class="pure-u-1-2 centered"><button class="pure-button button-remove" onclick="removePath('{ID}')">Remove</button></div>
            </div>                        
        </td>
    </script>

    <script id="log-template" type="text/html"><b>{TIME}</b>: <span class="text-{COLOR-CLASS}">{TEXT}</span></script>
    <script id="add-edit-template" type="text/html">
        <div class="pure-u-1-1 centered"><h2>{TYPE} Entry</h2></div>
        <div class="pure-u-1-1 centered"><input type="text" id="edit-txt" placeholder="Absolute path of the directory:"></div>
        <div class="pure-u-1-1 centered"><button class="pure-button button-green" onclick="overlayFinished()">Submit</button></div>
    </script>

    <script type="text/javascript">
        var mode = "Add";
        var target = "";
        var overlay = null;

        eel.expose(addPath);
        eel.expose(triggerAlert)
        eel.expose(setSize)
        eel.expose(logText)
        eel.expose(disableInput)
        eel.expose(enableInput)


        function overlayFinished() {
            var dir = document.getElementById("edit-txt").value;
            if(mode == "Add") {
                eel.add_path(dir);
                overlay.parentElement.removeChild(overlay);
            } else {
                var p = document.getElementById("path-" + target);
                status = eel.change_path(target, dir);
                if(status) {
                    p.innerHTML = dir;
                }
                overlay.parentElement.removeChild(overlay);
            }
        }


        function displayEditOverlay(type, t) {
            overlay = document.createElement("div");
            overlay.classList.add("overlay");
            overlay.classList.add("pure-g");

            overlay.innerHTML = document.getElementById("add-edit-template").innerHTML.replaceAll("{TYPE}", type);
            target = t;
            mode = type;

            document.body.appendChild(overlay);
        }


        function disableInput() {
            var blocker = document.createElement("div");
            blocker.classList.add("overlay input-blocker");
            blocker.classList.add("input-blocker");
            blocker.id = "input-blocker";
            blocker.innerHTML = "Deletion in progress, please wait...";
            document.body.appendChild(blocker);
        }


        function enableInput() {
            var blocker = document.getElementById("input-blocker");
            document.body.removeChild(blocker);
        }


        function triggerAlert(e) {
            alert(e);
        }


        function addLeadingZero(t) {
            return ("0" + t).slice(-2);
        }

        function getTimeStr() {
            var today = new Date();
            return addLeadingZero(today.getHours()) + ":" + addLeadingZero(today.getMinutes()) + ":" + addLeadingZero(today.getSeconds());
        }

        function logText(t, color) {
            var logEntry = document.createElement("div");
            t = t.replaceAll("\n", "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...")
            logEntry.classList.add("pure-u-1-1")
            logEntry.classList.add("log-entry")
            logEntry.innerHTML = document.getElementById("log-template").innerHTML.replaceAll("{TIME}", getTimeStr()).replaceAll("{TEXT}", t).replaceAll("{COLOR-CLASS}", color)
            var logBox = document.getElementById("log-box");
            logBox.appendChild(logEntry);
            logBox.scrollTop = logBox.scrollHeight;
        }


        function toggleRecursive(id) {
            eel.set_recursive(id, document.getElementById("recursive-" + id).checked)
        }


        function addPath(id, path, recursive, sizestr) {
            var newRow = document.createElement("tr")
            newRow.id = id;
            newRow.innerHTML = document.getElementById("path-template").innerHTML.replaceAll("{ID}", id).replaceAll("{PATH}", path).replaceAll("{SIZE}", sizestr);
            var tbod = document.getElementById("file-table-body");
            tbod.appendChild(newRow);
            document.getElementById("recursive-" + id).checked = Boolean(recursive);
            tbod.parentElement.scrollTop = tbod.parentElement.scrollHeight;
        }

        function setSize(id, size) {
            document.getElementById("size-" + id).innerHTML = size
        }

        function removePath(id) {
            var p = document.getElementById(id);
            if(p != null){
                document.getElementById("file-table-body").removeChild(p);
                eel.delete_path(id);
            }
        }

        function editPath(id) {
            var p = document.getElementById("path-" + id);
            var dir = prompt("Enter the absolute path of the directory:", p.innerHTML);
            status = eel.change_path(id, dir);
            if(status) {
                p.innerHTML = dir;
            }
        }

        function openFileInput() {
            var input = document.createElement("input");
            input.type = "file";
            input.webkitdirectory = true;
            input.directory = true;
            input.onchange = e => {
                var file = e.target.files[0];
                console.log(file);
                return file;
            }
            input.click();
        }

        function newPath() {
            var dir = prompt("Enter the absolute path of the directory:", "");
            eel.add_path(dir);
        }

        function callClean() {
            eel.clean_now()
        }

    </script>
</head>
<body>
    <div class="pure-g wrapper">
        <div class="pure-u-1-1 pure-g menu-bar">
            <div class="pure-u-1-3 menu-item">LOGO</div><!--
            --><div class="pure-u-1-3 menu-item"><a href="/templates/clean.htm">&#128465; Delete Files</a></div><!--
            --><div class="pure-u-1-3 menu-item"><a href="/templates/stats.htm">&#128202; Stats</a></div>
        </div>
        {% block content %}{% endblock %}
    </div>
</body>
</html>